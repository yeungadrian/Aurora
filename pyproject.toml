[project]
name = "portfoliobuilder"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12,<3.13"
dependencies = [
    "fastapi>=0.114.2",
    "uvicorn>=0.30.6",
    "polars>=1.7.1",
    "pydantic-settings>=2.5.2",
    "scipy>=1.14.1",
    "scikit-learn>=1.5.2",
    "httpx>=0.27.0",
]


[project.optional-dependencies]
streamlit = [
    "streamlit>=1.38.0",
]


[tool.uv]
package = false
dev-dependencies = [
    "pre-commit>=3.8.0",
    "pytest>=8.3.3",
    "coverage>=7.6.1",
    "trio>=0.26.2",
]


[tool.mypy]
files = ["app"]
strict = true
enable_error_code = [
  "redundant-expr",
  "truthy-bool",
  "ignore-without-code",
]
disable_error_code = [
  "empty-body",
]
disallow_subclassing_any = false
disallow_untyped_decorators = false


[tool.pytest.ini_options]
addopts = [
  "--strict-config",
  "--strict-markers",
]
xfail_strict = true
junit_family = "xunit2"


[tool.coverage.run]
source = [
    "app",
    "tests",
]

[tool.ruff]
line-length = 118
fix = true

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "W", # pycodestyle
  "F", # Pyflakes
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "D", # flake8-docstrings
  "D213", # Augment NumPy docstring convention: Multi-line docstring summary should start at the second line
  "D417", # Augment NumPy docstring convention: Missing argument descriptions
  "I", # isort
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "PT", # flake8-pytest-style
  "RUF", # Ruff-specific rules
  "PTH", # flake8-use-pathlib
  "PIE", # flake8-pie
  "TRY", # tryceratops
  "EM", # flake8-errmsg
  "FBT001", # flake8-boolean-trap
]

ignore = [
  # pydocstyle: http://www.pydocstyle.org/en/stable/error_codes.html
  "D401", # Relax NumPy docstring convention: First line should be in imperative mood
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D100", "D102", "D103", "B018", "FBT001"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 118

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.format]
docstring-code-format = true
