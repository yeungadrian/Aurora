name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
  schedule:
    # cron every week on monday
    - cron: "0 0 * * 1"

env:
  UV_SYSTEM_PYTHON: 1

jobs:
  lint:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - name: Install pre-commit
        run: pip install pre-commit==${{ vars.PRE_COMMIT_VERSION }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ vars.PRE_COMMIT_VERSION }}|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Lint
        run: pre-commit run --all-files --verbose --show-diff-on-failure

  test:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: Set up uv
        # Install a specific uv version using the installer
        run: curl -LsSf https://astral.sh/uv/0.3.1/install.sh | sh
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}
      - name: Install the project
        run: uv sync --dev
      - name: Run tests
        # For example, using `pytest`
        run: uv run pytest tests
      - name: Test
        run: uv run -- coverage run -m pytest tests
      - run: uv run -- coverage report
      - run: uv run -- coverage html --show-contexts --title "Coverage for ${{ github.sha }}"
      - name: Store coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov
      - name: Minimize uv cache
        run: uv cache prune --ci
